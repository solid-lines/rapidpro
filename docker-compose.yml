version: '3.7'
services:
  rapidpro:
    restart: always
    image: rapidpro:${RAPIDPRO_VERSION:-7.4.2}
    container_name: rapidpro${RAPIDPRO_VERSION:-7.4.2}_${HOSTNAME:-localhost}
    build:
      context: ./rapidpro-docker
      args:
        - RAPIDPRO_VERSION=${RAPIDPRO_VERSION:-7.4.2}
    depends_on:
      - redis
      - postgresql
    volumes:
      - ./data/sitestatic:/rapidpro/sitestatic
      - ./logs/rapidpro:/var/log/rapidpro
    links:
      - redis
      - postgresql
      - mailroom
    environment:
      - TESTING=${TESTING:-True}
      - DOMAIN_NAME=${RAPIDPRO_HOST:-localhost}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-["localhost"]}
      - TEMBA_HOST=${TEMBA_HOST:-localhost}
      - DEBUG=${DEBUG:-False}
      - DATABASE_URL=postgresql://postgres:temba@postgresql/temba?sslmode=disable
      - REDIS_HOST=redis_${HOSTNAME:-localhost}
      - REDIS_PORT=6379
      - REDIS_DB=15
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      - SECRET_KEY=${SECRET_KEY:-changeme}
      - CLEAR_COMPRESSOR_CACHE=${CLEAR_COMPRESSOR_CACHE:-off}
      - MANAGEPY_COLLECTSTATIC=${MANAGEPY_COLLECTSTATIC:-off}
      - MANAGEPY_COMPRESS=${MANAGEPY_COMPRESS:-off}
      - MANAGEPY_INIT_DB=${MANAGEPY_INIT_DB:-off}
      - MANAGEPY_MIGRATE=${MANAGEPY_MIGRATE:-on}
      - MANAGEPY_IMPORT_GEOJSON=${MANAGEPY_IMPORT_GEOJSON:-off}
      - SENTRY_DSN=${SENTRY_DSN}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_ACL=${AWS_DEFAULT_ACL}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - AWS_BUCKET_DOMAIN=${AWS_BUCKET_DOMAIN}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - ARCHIVE_BUCKET=${ARCHIVE_BUCKET}
      - AWS_STATIC=${AWS_STATIC}
      - AWS_MEDIA=${AWS_MEDIA}
      - AWS_QUERYSTRING_AUTH=${AWS_QUERYSTRING_AUTH}
      - OSM_RELATION_IDS=${OSM_RELATION_IDS}
      - CDN_DOMAIN_NAME=${CDN_DOMAIN_NAME:-changeme}
      - EMAIL_HOST=${EMAIL_HOST:-example.com}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-admin@example.com}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-changeme}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-admin@example.com}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - EMAIL_TIMEOUT=${EMAIL_TIMEOUT:-10}
      - SEND_EMAILS=${SEND_EMAILS:-False}
      - SEND_RECEIPTS=${SEND_RECEIPTS:-True}
      - DJANGO_COMPRESSOR=${DJANGO_COMPRESSOR:-off}
      - BRANDING_ALLOW_SIGNUPS=${BRANDING_ALLOW_SIGNUPS:-on}
      - BRANDING_API_LINK=${BRANDING_API_LINK}
      - BRANDING_LINK=${BRANDING_LINK}
      - BRANDING_SPLASH=${BRANDING_SPLASH}
      - MAILROOM_URL=http://mailroom:8090
      #- MAILROOM_AUTH_TOKEN=${MAILROOM_AUTH_TOKEN:-changeme}
      - STORAGE_URL=${STORAGE_URL}
      - FLOW_FROM_EMAIL=${FLOW_FROM_EMAIL}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
      - TWITTER_API_KEY=${TWITTER_API_KEY}
      - TWITTER_API_SECRET=${TWITTER_API_SECRET}
      - GOOGLE_TRACKING_ID=${GOOGLE_TRACKING_ID}
      - MAILGUN_API_KEY=${MAILGUN_API_KEY}
      - ZENDESK_CLIENT_ID=${ZENDESK_CLIENT_ID}
      - ZENDESK_CLIENT_SECRET=${ZENDESK_CLIENT_SECRET}
      - FACEBOOK_APPLICATION_ID=${FACEBOOK_APPLICATION_ID}
      - FACEBOOK_APPLICATION_SECRET=${FACEBOOK_APPLICATION_SECRET}
      - FACEBOOK_WEBHOOK_SECRET=${FACEBOOK_WEBHOOK_SECRET}
      - WHATSAPP_ADMIN_SYSTEM_USER_ID=${WHATSAPP_ADMIN_SYSTEM_USER_ID}
      - WHATSAPP_ADMIN_SYSTEM_USER_TOKEN=${WHATSAPP_ADMIN_SYSTEM_USER_TOKEN}
      - WHATSAPP_FACEBOOK_BUSINESS_ID=${WHATSAPP_FACEBOOK_BUSINESS_ID}
      - ALLOWED_WHATSAPP_FACEBOOK_BUSINESS_IDS=${ALLOWED_WHATSAPP_FACEBOOK_BUSINESS_IDS}
    ports:
      - 8000:8000
    networks:
      - frontend
  celery_base:
    restart: always
    image: rapidpro:${RAPIDPRO_VERSION:-7.4.2}
    container_name: celery_base_${HOSTNAME:-localhost}
    depends_on:
      - rapidpro
    links:
      - redis
      - postgresql
      - mailroom
    environment:
      - TESTING=${TESTING:-True}
      - DATABASE_URL=postgresql://postgres:temba@postgresql/temba?sslmode=disable
      - REDIS_HOST=redis_${HOSTNAME:-localhost}
      - REDIS_PORT=6379
      - REDIS_DB=15
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      - SECRET_KEY=${SECRET_KEY:-changeme}
      - SEND_EMAILS=${SEND_EMAILS:-False}
      - SEND_RECEIPTS=${SEND_RECEIPTS:-True}
    networks:
      - frontend
    command: ["/rapidpro/env/bin/celery", "--app=temba", "worker", "--loglevel=ERROR", "--queues=celery,flows"]
  celery_msgs:
    restart: always
    image: rapidpro:${RAPIDPRO_VERSION:-7.4.2}
    container_name: celery_msg_${HOSTNAME:-localhost}
    depends_on:
      - rapidpro
    links:
      - redis
      - postgresql
      - mailroom
    environment:
      - TESTING=${TESTING:-True}
      - DATABASE_URL=postgresql://postgres:temba@postgresql/temba?sslmode=disable
      - REDIS_HOST=redis_${HOSTNAME:-localhost}
      - REDIS_PORT=6379
      - REDIS_DB=15
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      - SECRET_KEY=${SECRET_KEY:-changeme}
      - SEND_EMAILS=${SEND_EMAILS:-False}
      - SEND_RECEIPTS=${SEND_RECEIPTS:-True}
    networks:
      - frontend
    command: ["/rapidpro/env/bin/celery", "--app=temba", "worker", "--loglevel=ERROR", "--queues=msgs,handler"]

  redis:
    restart: always
    image: redis:alpine
    container_name: redis_${HOSTNAME:-localhost}
    networks:
      - frontend

  postgresql:
    restart: always
    image: mdillon/postgis:11
    container_name: postgresql_${HOSTNAME:-localhost}
    environment:
      - POSTGRES_DB=temba
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - frontend

  mailroom:
    restart: always
    image: mailroom:${MAILROOM_VERSION:-7.4.1}
    container_name: mailroom${MAILROOM_VERSION:-7.4.1}_${HOSTNAME:-localhost}
    build:
      context: ./mailroom-docker
      args:
        - MAILROOM_VERSION=${MAILROOM_VERSION:-7.4.1}
    links:
      - redis
      - postgresql
    volumes:
      - ./logs/mailroom:/var/log/mailroom
    environment:
      - MAILROOM_ADDRESS=0.0.0.0
      - MAILROOM_DB=postgres://postgres:temba@postgresql/temba?sslmode=disable
      - REDIS_HOST=redis_${HOSTNAME:-localhost}
      - REDIS_PORT=6379
      - REDIS_DB=15
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      - MAILROOM_REDIS=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      - MAILROOM_ELASTIC=http://elastic:changeme@elasticsearch:9200
      - MAILROOM_SMTP_SERVER=${MAILROOM_SMTP_SERVER:-smtp://user%40password@server:port/?from=foo%40gmail.com}
      - MAILROOM_DOMAIN=${RAPIDPRO_HOST:-localhost}
      - MAILROOM_ATTACHMENT_DOMAIN=${RAPIDPRO_HOST:-localhost}
      - MAILROOM_AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-changeme}
      - MAILROOM_AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-changeme}
      - MAILROOM_S3_REGION=${AWS_S3_REGION_NAME:-changeme}
      - MAILROOM_S3_MEDIA_PREFIX=mailroom
      - MAILROOM_S3_MEDIA_BUCKET=${MAILROOM_S3_MEDIA_BUCKET:-mailroom}
      #- MAILROOM_AUTH_TOKEN=${MAILROOM_AUTH_TOKEN:-changeme}
      - MAILROOM_LOG_LEVEL=${MAILROOM_LOG_LEVEL:-debug}
    ports:
      - 8090:8090
    networks:
      - frontend

  courier:
    restart: always
    image: courier:${COURIER_VERSION:-7.4.0}
    container_name: courier${COURIER_VERSION:-7.4.0}_${HOSTNAME:-localhost}
    build:
      context: ./courier-docker
      args:
        - COURIER_VERSION=${COURIER_VERSION:-7.4.0}
    depends_on:
      - rapidpro
    links:
      - redis
      - postgresql
    volumes:
      - ./logs/courier:/var/log/courier
    environment:
      - COURIER_DOMAIN=${RAPIDPRO_HOST:-localhost}
      - COURIER_SPOOL_DIR=/tmp/courier/
      - COURIER_PORT=8081
      - COURIER_DB=postgres://postgres:temba@postgresql/temba?sslmode=disable
      - REDIS_HOST=redis_${HOSTNAME:-localhost}
      - REDIS_PORT=6379
      - REDIS_DB=15
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      - COURIER_REDIS=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      - COURIER_AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-changeme}
      - COURIER_AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-changeme}
      - COURIER_S3_REGION=${AWS_S3_REGION_NAME:-changeme}
      - COURIER_S3_MEDIA_PREFIX=courier
      - COURIER_S3_MEDIA_BUCKET=${COURIER_S3_MEDIA_BUCKET:-changeme}
      - COURIER_LOG_LEVEL=${COURIER_LOG_LEVEL:-debug}
      - FACEBOOK_APPLICATION_ID=${FACEBOOK_APPLICATION_ID}
      - FACEBOOK_APPLICATION_SECRET=${FACEBOOK_APPLICATION_SECRET}
      - FACEBOOK_WEBHOOK_SECRET=${FACEBOOK_WEBHOOK_SECRET}
      - COURIER_FACEBOOK_APPLICATION_ID=${FACEBOOK_APPLICATION_ID}
      - COURIER_FACEBOOK_APPLICATION_SECRET=${FACEBOOK_APPLICATION_SECRET}
      - COURIER_FACEBOOK_WEBHOOK_SECRET=${FACEBOOK_WEBHOOK_SECRET}
    ports:
      - 8081:8081
    networks:
      - frontend

volumes:
    sitestatic-volume:

networks:
  frontend:
    name: network_${HOSTNAME:-localhost}
    driver: bridge
